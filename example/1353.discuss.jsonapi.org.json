{
  "post_stream": {
    "posts": [
      {
        "id": 2150,
        "name": "",
        "username": "mikeni",
        "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png",
        "created_at": "2017-07-06T01:56:25.763Z",
        "cooked": "<p>I’ve been reading the specs over and over again.</p>\n<p>If an article has many comments,</p>\n<p>1.) are you supposed to POST to /comments where in body, you have a relationship to article?</p>\n<p>or</p>\n<p>2.) are you supposed to POST to /articles/33/comments?</p>\n<p>and even if you do the 2nd method, do you also put the relationship to the article even if it is in the url?</p>",
        "post_number": 1,
        "post_type": 1,
        "updated_at": "2017-07-06T01:56:25.763Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 43,
        "incoming_link_count": 162,
        "reads": 26,
        "score": 822.35,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 502,
        "hidden": false,
        "trust_level": 0,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2154,
        "name": "",
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "created_at": "2017-07-06T19:14:50.492Z",
        "cooked": "<p>Currently, the spec is pretty specific about what is supposed to happen in this case.</p>\n<p>If you scroll down to the POST request portion at <a href=\"http://jsonapi.org/format/#crud-updating-to-many-relationships\">Update to-many relationships</a>, you’ll notice the /resource/{id}/relationships/{rel-name} link requires a resource identifier object to be POSTed to add itself to the set of resources related to the primary resource through the rel-name.</p>\n<p>This unfortunately, seems to be a 2 step process based on the current spec, while some contributors claim you can use the convention of /resource/{id}/{rel-name} to directly post a member of the relationship, this is unintuitive and hackey and most certainly not in the spec as far as I can see.  It also breaks the hypermedia driven paradigm by requiring you to implement stateful information in the URL.</p>\n<p>The ideal solution would be for them to allow you to post a ‘resource object’ to the resource relationship link directly, and require the server to create the resource if it is of the correct type and then add the resource to the relationship set, following the conventional error handling process described in the spec.</p>",
        "post_number": 2,
        "post_type": 1,
        "updated_at": "2017-07-06T19:15:23.157Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 55,
        "incoming_link_count": 0,
        "reads": 26,
        "score": 12.95,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "http://jsonapi.org/format/#crud-updating-to-many-relationships",
            "internal": false,
            "reflection": false,
            "title": "JSON API — Latest Specification (v1.0)",
            "clicks": 25
          }
        ],
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 415,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2156,
        "name": "",
        "username": "derrekbertrand",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png",
        "created_at": "2017-07-06T20:07:36.449Z",
        "cooked": "<p>Nested relationships are a common feature of RESTful APIs. I don’t see anything un-intuitive about posting to <code>/resource/{id}/{rel-name}</code>, or even having an entire set of RESTful endpoints there.</p>",
        "post_number": 3,
        "post_type": 1,
        "updated_at": "2017-07-06T20:07:36.449Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 47,
        "incoming_link_count": 0,
        "reads": 27,
        "score": 12.75,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 503,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2158,
        "name": "",
        "username": "mikeni",
        "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png",
        "created_at": "2017-07-06T21:20:23.566Z",
        "cooked": "<p>Thanks,</p>\n<p>Not sure if I want to follow the specs to the dot, or do what is “familiar” to non json-api people.</p>",
        "post_number": 4,
        "post_type": 1,
        "updated_at": "2017-07-06T21:20:23.566Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 28,
        "incoming_link_count": 3,
        "reads": 27,
        "score": 26.8,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 502,
        "hidden": false,
        "trust_level": 0,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2159,
        "name": "",
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "created_at": "2017-07-06T21:52:48.297Z",
        "cooked": "<aside class=\"quote\" data-post=\"3\" data-topic=\"1020\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://discourse-cdn-sjc1.com/business6/user_avatar/discuss.jsonapi.org/derrekbertrand/40/426_1.png\" class=\"avatar\"> derrekbertrand:</div>\n<blockquote>\n<p>Nested relationships are a common feature of RESTful APIs. I don’t see anything un-intuitive about posting to /resource/{id}/{rel-name}, or even having an entire set of RESTful endpoints there.</p>\n</blockquote>\n</aside>\n<p>That’s understandable, but those aren’t RESTful APIs.  Those are likely CRUD APIs, and json-api is about enhancing and pushing CRUD api users into a more hypermedia driven space.</p>\n<p>URL resource partitioning is easy in the short term and handicaps the API designer and consumer in the long term.</p>\n<aside class=\"quote\" data-post=\"4\" data-topic=\"1020\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://avatars.discourse.org/v2/letter/m/e36b37/40.png\" class=\"avatar\"> mikeni:</div>\n<blockquote>\n<p>Thanks,</p>\n<p>Not sure if I want to follow the specs to the dot, or do what is “familiar” to non json-api people.</p>\n</blockquote>\n</aside>\n<p>/giphy Do or do not, there is no try.</p>\n<p>Having said that, I did actually just put up a suggestion on GH about solving this issue <a href=\"https://github.com/json-api/json-api/issues/1158#issuecomment-313527090\" rel=\"nofollow noopener\">here</a>.</p>\n<p>If you are going to follow the spec, follow the spec because ultimately the people who benefit from the use of the spec are your users.  Snowflake or partial implementations which go outside the bounds of ‘unconditionally compliant’ and ‘conditionally compliant’ to the specification actually hurt the consumer in the long run, as their abstractions for the structure aren’t complete, and they can’t use nice tools like <a href=\"https://github.com/katharsis-project/katharsis-framework\" rel=\"nofollow noopener\">Katharsis</a> to operate against your service.</p>\n<p>Back on the initial question, as I posted in github issue, I believe there is a better path than your backreference approach which is currently supported by the specification.  Namely you POST a compound document with the user defined ID ‘resource identifier object’ to the relationships link /resource/{id}/relationships/{rel-name} with the new resource in the included section.</p>\n<p>However, I think the direct POST / PATCH would be an easier way to implement a client long term.</p>",
        "post_number": 5,
        "post_type": 1,
        "updated_at": "2017-07-06T21:57:26.587Z",
        "reply_count": 1,
        "reply_to_post_number": 3,
        "quote_count": 2,
        "avg_time": 35,
        "incoming_link_count": 2,
        "reads": 28,
        "score": 37.35,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://github.com/json-api/json-api/issues/1158#issuecomment-313527090",
            "internal": false,
            "reflection": false,
            "title": "Creating new relationship · Issue #1158 · json-api/json-api · GitHub",
            "clicks": 21
          },
          {
            "url": "https://github.com/katharsis-project/katharsis-framework",
            "internal": false,
            "reflection": false,
            "title": "GitHub - katharsis-project/katharsis-framework: Katharsis adds powerful layer for RESTful endpoints providing implementenation of JSON:API standard",
            "clicks": 8
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "derrekbertrand",
          "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png"
        },
        "actions_summary": [
          {
            "id": 2,
            "count": 1
          }
        ],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 415,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2160,
        "name": "",
        "username": "mikeni",
        "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png",
        "created_at": "2017-07-06T22:00:07.189Z",
        "cooked": "<p>Thanks, do you guys know of any public apis that implement json api spec perfectly?  one with  “creating” one to many relationships ?</p>",
        "post_number": 6,
        "post_type": 1,
        "updated_at": "2017-07-06T22:00:07.189Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 22,
        "incoming_link_count": 0,
        "reads": 24,
        "score": 5.9,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 502,
        "hidden": false,
        "trust_level": 0,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2162,
        "name": "",
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "created_at": "2017-07-06T22:16:26.863Z",
        "cooked": "<p>That might be a better question for <a class=\"mention\" href=\"/u/steveklabnik\">@steveklabnik</a> or <a class=\"mention\" href=\"/u/dgeb\">@dgeb</a>.  However, is there a reason you are implementing this all yourself, and not using a library which has done a lot of this heavy lifting for you in your language of choice?</p>",
        "post_number": 7,
        "post_type": 1,
        "updated_at": "2017-07-06T22:16:26.863Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 21,
        "incoming_link_count": 0,
        "reads": 24,
        "score": 5.85,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 415,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2163,
        "name": "",
        "username": "derrekbertrand",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png",
        "created_at": "2017-07-06T22:18:03.058Z",
        "cooked": "<aside class=\"quote\" data-post=\"5\" data-topic=\"1020\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://discourse-cdn-sjc1.com/business6/user_avatar/discuss.jsonapi.org/michaelhibay/40/405_1.png\" class=\"avatar\"> michaelhibay:</div>\n<blockquote>\n<p>Back on the initial question, as I posted in github issue, I believe there is a better path than your backreference approach which is currently supported by the specification.  Namely you POST a compound document with the user defined ID ‘resource identifier object’ to the relationships link /resource/{id}/relationships/{rel-name} with the new resource in the included section.</p>\n</blockquote>\n</aside>\n<p>This is only an option if you use UUIDs for the <code>id</code> field, which not everyone does nor should they.</p>\n<p>AFAICT using backreferences in the URL is a valid interpretation of the spec, and as long as it is properly linked, completely valid HATEOAS.</p>",
        "post_number": 8,
        "post_type": 1,
        "updated_at": "2017-07-06T22:18:03.058Z",
        "reply_count": 1,
        "reply_to_post_number": 5,
        "quote_count": 1,
        "avg_time": 25,
        "incoming_link_count": 0,
        "reads": 24,
        "score": 11.05,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "michaelhibay",
          "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 503,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2164,
        "name": "",
        "username": "mikeni",
        "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png",
        "created_at": "2017-07-06T22:32:52.281Z",
        "cooked": "<p>I’m using phoenix and elixir and ja_serializer,</p>\n<p>it does basics of converting JSON attributes/relationships to Ecto friendly data, but you still have to setup and design the Urls yourself</p>",
        "post_number": 9,
        "post_type": 1,
        "updated_at": "2017-07-06T22:32:52.281Z",
        "reply_count": 0,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 27,
        "incoming_link_count": 1,
        "reads": 23,
        "score": 10.95,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 502,
        "hidden": false,
        "trust_level": 0,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2166,
        "name": "",
        "username": "mikeni",
        "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png",
        "created_at": "2017-07-07T00:34:50.422Z",
        "cooked": "<p>do you guys know of any api documentation that shows a proper json spec implementation?</p>\n<p>for example this is for angellist<br>\n<a href=\"https://market.mashape.com/community/angellist\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\">https://market.mashape.com/community/angellist</a></p>\n<p>but it is doing the CRUD method</p>",
        "post_number": 10,
        "post_type": 1,
        "updated_at": "2017-07-07T00:34:50.422Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 32,
        "incoming_link_count": 2,
        "reads": 23,
        "score": 21.2,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "https://market.mashape.com/community/angellist",
            "internal": false,
            "reflection": false,
            "title": "AngelList API Documentation",
            "clicks": 17
          }
        ],
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 502,
        "hidden": false,
        "trust_level": 0,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2167,
        "name": "",
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "created_at": "2017-07-07T14:30:15.674Z",
        "cooked": "<aside class=\"quote\" data-post=\"8\" data-topic=\"1020\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://discourse-cdn-sjc1.com/business6/user_avatar/discuss.jsonapi.org/derrekbertrand/40/426_1.png\" class=\"avatar\"> derrekbertrand:</div>\n<blockquote>\n<p>This is only an option if you use UUIDs for the id field, which not everyone does <strong>nor should they</strong>.</p>\n</blockquote>\n</aside>\n<p>I’m not sure I understand why you make this assertion at all, and identifier is meant to be a key value, why would the format of the identifier matter in any way where a user <em>should not</em> use it?  I’ll let you make your arguments for this statement if you chose before I comment.</p>\n<p>As far as the back references are concerned, from what I see you are correct.  I previously stated exactly that, the backreference method was a valid approach under the specification, but I did make the claim it required a bit of mental gymnastics.  I believe this claim is both true and a valid criticism of its usability.  The compound document approach is also currently valid within the specification, and far more straightforward.</p>\n<p>For the sake of concisely defining the behavior of the specification it isn’t in our collective best interests to dilute the means operating against a server running a json-api service, however I do think as far as semantic sugar is concerned the best approach would be to simply allow the inclusion of a ‘resource object’ in the POST and PATCH collections.  My previous paragraph, would of course enumerate the way you COULD do the same now albeit in a more verbose, and constrained fashion.</p>",
        "post_number": 11,
        "post_type": 1,
        "updated_at": "2017-07-07T14:30:15.674Z",
        "reply_count": 0,
        "reply_to_post_number": 8,
        "quote_count": 1,
        "avg_time": 31,
        "incoming_link_count": 3,
        "reads": 20,
        "score": 20.55,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "derrekbertrand",
          "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 415,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2176,
        "name": "",
        "username": "derrekbertrand",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png",
        "created_at": "2017-07-13T03:15:05.076Z",
        "cooked": "<p>You’ll find they’re quite similar, except unlike CRUD, we’re abstracting things a bit more. You’ll use links, relationships, and sub-resources to help abstract away things like pivot tables and foreign keys. The hardest part is not getting hung up on your data representation and coming up with more elegant ways to represent your data.</p>\n<p>There isn’t a “wrong” or “right” way to do it as long as the spec is followed. JSONAPI is more of a standardized set of tools to accomplish these tasks. Welcome to the <strong>real</strong> difficult part of programming: systems design.</p>",
        "post_number": 12,
        "post_type": 1,
        "updated_at": "2017-07-13T03:15:05.076Z",
        "reply_count": 1,
        "reply_to_post_number": 10,
        "quote_count": 0,
        "avg_time": 29,
        "incoming_link_count": 0,
        "reads": 20,
        "score": 10.45,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "mikeni",
          "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 503,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2181,
        "name": "",
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "created_at": "2017-07-13T15:45:23.717Z",
        "cooked": "<p>While I’m very aware of the issues you bring up when designing a hypermedia driven service and agree with the overall premise that system design is the most important and complicated part of the implementation, you still haven’t answered my question.  Why “shouldn’t” people use UUID’s?  You made no mention of any negative property of their use to recommend against it.</p>\n<p>The traditional incremented integer ‘best practice’ is always a worse decision for security and cohesion concerns.</p>\n<p>As far as the other methods go, I used the term ‘semantic sugar’ to reference ‘syntactic sugar’ meaning it was functionally equivalent but a more intuitive process.</p>\n<p>The proposed modification approach is slightly better than the compound document approach which is markedly better than the back reference approach, when comparing their relative intuitiveness.</p>",
        "post_number": 13,
        "post_type": 1,
        "updated_at": "2017-07-13T15:45:23.717Z",
        "reply_count": 0,
        "reply_to_post_number": 12,
        "quote_count": 0,
        "avg_time": 25,
        "incoming_link_count": 0,
        "reads": 21,
        "score": 5.45,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "derrekbertrand",
          "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 415,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2248,
        "name": "",
        "username": "derrekbertrand",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png",
        "created_at": "2017-07-28T04:53:59.584Z",
        "cooked": "<p><a class=\"mention\" href=\"/u/michaelhibay\">@michaelhibay</a> My last post referring to system design was directed at <a class=\"mention\" href=\"/u/mikeni\">@mikeni</a> and designed to re-align this thread on topic. I’m not going to wreck this poor guys inquiry with pointless bickering.</p>\n<p>I say UUIDs are a dumb decision and I don’t like the compound doc approach. You say incremented integers are flawed and don’t like backreferences. Ultimately, he must make the design decision best for his project.</p>",
        "post_number": 14,
        "post_type": 1,
        "updated_at": "2017-07-28T04:53:59.584Z",
        "reply_count": 1,
        "reply_to_post_number": null,
        "quote_count": 0,
        "avg_time": 30,
        "incoming_link_count": 0,
        "reads": 21,
        "score": 10.7,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 503,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2251,
        "name": "",
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "created_at": "2017-07-28T14:21:24.820Z",
        "cooked": "<p>I apologize if my response came off as bikeshedding in your mind.  While I feel I am well versed in many subjects, I heartily welcome every opportunity to learn and was very interested to know your thoughts. I was challenging the assertion of UUID usage being a mistake in situations as a chance to learn why you would say this.</p>\n<p>The back-reference solution is approaching a bike-shedding discussion which would be better served as a specification level discussion rather than an implementation one to be sure.  However, the point is certainly somewhat moot if and when the use of hypermedia can obviate the URL, but hypermedia is unfortunately not a requirement and my statement was the spec should offer limited solutions to the requirement to keep the interaction and documents as uniform as possible.</p>",
        "post_number": 15,
        "post_type": 1,
        "updated_at": "2017-07-28T14:21:24.820Z",
        "reply_count": 1,
        "reply_to_post_number": 14,
        "quote_count": 0,
        "avg_time": 25,
        "incoming_link_count": 0,
        "reads": 22,
        "score": 10.65,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "derrekbertrand",
          "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 415,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2252,
        "name": "",
        "username": "cam",
        "avatar_template": "https://avatars.discourse.org/v2/letter/c/bbe5ce/{size}.png",
        "created_at": "2017-07-28T14:49:56.646Z",
        "cooked": "<p>Michael, in the “Update to-many relationships” of the spec, can you please put an example of a POST with a NEW comment (meaning how the URL and json would look like)?  From your statement above, it sounds like adding a NEW comment is a two step process.  Are you indicating that you would have to first do a POST to /comments and then a POST to /articles/1/relationships/comments?  I started a new thread yesterday about this issue with foreign keys and this does not work in that situation.  I’m trying to understand the correct way to deal with foreign keys and updating to many relationships.</p>\n<p>The more examples, the easier it is to understand what one should do in different scenarios. That would be very helpful.  Thank you.<br>\n–Cam–</p>",
        "post_number": 16,
        "post_type": 1,
        "updated_at": "2017-07-28T14:56:42.102Z",
        "reply_count": 2,
        "reply_to_post_number": 2,
        "quote_count": 0,
        "avg_time": 29,
        "incoming_link_count": 2,
        "reads": 21,
        "score": 25.65,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 2,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "michaelhibay",
          "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 499,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2254,
        "name": "",
        "username": "derrekbertrand",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png",
        "created_at": "2017-07-28T17:01:02.162Z",
        "cooked": "<p>You can do this with one request using a compound document posted to <code>/comments</code>. I agree, though, there needs to be more use cases of this in action. You would POST the following, and the relationships would be created along with the object.</p>\n<p><a href=\"http://jsonapi.org/format/#document-compound-documents\" class=\"onebox\" target=\"_blank\">http://jsonapi.org/format/#document-compound-documents</a></p>",
        "post_number": 17,
        "post_type": 1,
        "updated_at": "2017-07-28T17:04:00.964Z",
        "reply_count": 0,
        "reply_to_post_number": 16,
        "quote_count": 0,
        "avg_time": 31,
        "incoming_link_count": 0,
        "reads": 20,
        "score": 5.55,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "http://jsonapi.org/format/#document-compound-documents",
            "internal": false,
            "reflection": false,
            "clicks": 25
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "cam",
          "avatar_template": "https://avatars.discourse.org/v2/letter/c/bbe5ce/{size}.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 503,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2255,
        "name": "",
        "username": "derrekbertrand",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png",
        "created_at": "2017-07-28T17:10:57.711Z",
        "cooked": "<p>Until I have a measurably better suggestion, I won’t complain about it anymore. I don’t have numbers to back up any claim that I’d make, and all my complaints would be performance related.</p>\n<p>I’ve been researching alternatives, and if I get around to benchmarking them I’ll post the results in a new thread.</p>",
        "post_number": 18,
        "post_type": 1,
        "updated_at": "2017-07-28T17:10:57.711Z",
        "reply_count": 1,
        "reply_to_post_number": 15,
        "quote_count": 0,
        "avg_time": 26,
        "incoming_link_count": 1,
        "reads": 20,
        "score": 15.3,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "michaelhibay",
          "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 503,
        "hidden": false,
        "trust_level": 1,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      },
      {
        "id": 2256,
        "name": "",
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "created_at": "2017-07-28T17:32:34.478Z",
        "cooked": "<p>There’s no need to carry this discussion in multiple threads.  <a href=\"http://discuss.jsonapi.org/t/posting-related-data/1054/3\">I responded to the thread you created</a>, and we can continue there.</p>\n<aside class=\"quote\" data-post=\"18\" data-topic=\"1020\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img alt width=\"20\" height=\"20\" src=\"https://discourse-cdn-sjc1.com/business6/user_avatar/discuss.jsonapi.org/derrekbertrand/40/426_1.png\" class=\"avatar\"> derrekbertrand:</div>\n<blockquote>\n<p>Until I have a measurably better suggestion, I won’t complain about it anymore. I don’t have numbers to back up any claim that I’d make, and all my complaints would be performance related.</p>\n<p>I’ve been researching alternatives, and if I get around to benchmarking them I’ll post the results in a new thread.</p>\n</blockquote>\n</aside>\n<p>I’d be interested in seeing those results.  Despite what they reinforce in college, performance related issues which are outside the bounds of algorithmic complexity are generally best addressed when they show signs of being a problem.  I regularly have to fight the urge of premature optimization, so I understand where you are coming from.</p>",
        "post_number": 19,
        "post_type": 1,
        "updated_at": "2017-07-28T17:32:34.478Z",
        "reply_count": 0,
        "reply_to_post_number": 16,
        "quote_count": 1,
        "avg_time": 34,
        "incoming_link_count": 4,
        "reads": 21,
        "score": 25.9,
        "yours": false,
        "topic_id": 1020,
        "topic_slug": "post-comments-with-relationship-or-post-articles-33-comments",
        "display_username": "",
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_bg_color": null,
        "primary_group_flair_color": null,
        "version": 1,
        "can_edit": false,
        "can_delete": false,
        "can_recover": false,
        "can_wiki": false,
        "link_counts": [
          {
            "url": "http://discuss.jsonapi.org/t/posting-related-data/1054/3",
            "internal": true,
            "reflection": false,
            "title": "POSTing related data",
            "clicks": 30
          }
        ],
        "read": true,
        "user_title": null,
        "reply_to_user": {
          "username": "cam",
          "avatar_template": "https://avatars.discourse.org/v2/letter/c/bbe5ce/{size}.png"
        },
        "actions_summary": [],
        "moderator": false,
        "admin": false,
        "staff": false,
        "user_id": 415,
        "hidden": false,
        "trust_level": 2,
        "deleted_at": null,
        "user_deleted": false,
        "edit_reason": null,
        "can_view_edit_history": true,
        "wiki": false,
        "can_accept_answer": false,
        "can_unaccept_answer": false,
        "accepted_answer": false
      }
    ],
    "stream": [
      2150,
      2154,
      2156,
      2158,
      2159,
      2160,
      2162,
      2163,
      2164,
      2166,
      2167,
      2176,
      2181,
      2248,
      2251,
      2252,
      2254,
      2255,
      2256
    ]
  },
  "timeline_lookup": [
    [
      1,
      403
    ],
    [
      2,
      402
    ],
    [
      11,
      401
    ],
    [
      12,
      396
    ],
    [
      13,
      395
    ],
    [
      14,
      381
    ],
    [
      15,
      380
    ]
  ],
  "suggested_topics": [
    {
      "id": 1121,
      "title": "Is it valid for a server to return a response with no body?",
      "fancy_title": "Is it valid for a server to return a response with no body?",
      "slug": "is-it-valid-for-a-server-to-return-a-response-with-no-body",
      "posts_count": 3,
      "reply_count": 0,
      "highest_post_number": 3,
      "image_url": null,
      "created_at": "2017-10-06T15:09:32.969Z",
      "last_posted_at": "2017-10-06T18:49:15.183Z",
      "bumped": true,
      "bumped_at": "2017-10-06T18:49:15.183Z",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "archetype": "regular",
      "like_count": 3,
      "views": 569,
      "category_id": 1,
      "featured_link": null,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 565,
            "username": "bundacia",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/bundacia/{size}/496_1.png"
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 415,
            "username": "michaelhibay",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 563,
            "username": "n2ygk",
            "avatar_template": "https://avatars.discourse.org/v2/letter/n/50afbb/{size}.png"
          }
        }
      ]
    },
    {
      "id": 1150,
      "title": "Status of Versioning - What's the silver bullet?",
      "fancy_title": "Status of Versioning - What&rsquo;s the silver bullet?",
      "slug": "status-of-versioning-whats-the-silver-bullet",
      "posts_count": 1,
      "reply_count": 0,
      "highest_post_number": 1,
      "image_url": null,
      "created_at": "2017-11-03T10:15:37.624Z",
      "last_posted_at": "2017-11-03T10:15:37.685Z",
      "bumped": true,
      "bumped_at": "2017-11-03T10:15:37.685Z",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "archetype": "regular",
      "like_count": 0,
      "views": 113,
      "category_id": 1,
      "featured_link": null,
      "posters": [
        {
          "extras": "latest single",
          "description": "Original Poster, Most Recent Poster",
          "user": {
            "id": 572,
            "username": "mblackritter",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/mblackritter/{size}/498_1.png"
          }
        }
      ]
    },
    {
      "id": 1192,
      "title": "Returning page meta data",
      "fancy_title": "Returning page meta data",
      "slug": "returning-page-meta-data",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-01-25T15:34:35.664Z",
      "last_posted_at": "2018-03-08T13:37:46.651Z",
      "bumped": true,
      "bumped_at": "2018-03-08T13:37:46.651Z",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "archetype": "regular",
      "like_count": 1,
      "views": 416,
      "category_id": 1,
      "featured_link": null,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 599,
            "username": "marceloverdijk",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/marceloverdijk/{size}/521_1.png"
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 415,
            "username": "michaelhibay",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
          }
        }
      ]
    },
    {
      "id": 1194,
      "title": "Auth Header Question",
      "fancy_title": "Auth Header Question",
      "slug": "auth-header-question",
      "posts_count": 2,
      "reply_count": 0,
      "highest_post_number": 2,
      "image_url": null,
      "created_at": "2018-01-30T19:32:48.514Z",
      "last_posted_at": "2018-01-31T05:48:56.600Z",
      "bumped": true,
      "bumped_at": "2018-01-31T05:48:56.600Z",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "archetype": "regular",
      "like_count": 0,
      "views": 373,
      "category_id": 1,
      "featured_link": null,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 581,
            "username": "Wesley",
            "avatar_template": "https://avatars.discourse.org/v2/letter/w/eb9ed0/{size}.png"
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 415,
            "username": "michaelhibay",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
          }
        }
      ]
    },
    {
      "id": 1065,
      "title": "Idea: Request Cycle Library",
      "fancy_title": "Idea: Request Cycle Library",
      "slug": "idea-request-cycle-library",
      "posts_count": 7,
      "reply_count": 3,
      "highest_post_number": 7,
      "image_url": null,
      "created_at": "2017-08-13T19:03:54.180Z",
      "last_posted_at": "2017-09-02T15:38:20.661Z",
      "bumped": true,
      "bumped_at": "2017-09-02T15:38:20.661Z",
      "unseen": false,
      "pinned": false,
      "unpinned": null,
      "visible": true,
      "closed": false,
      "archived": false,
      "bookmarked": null,
      "liked": null,
      "archetype": "regular",
      "like_count": 1,
      "views": 764,
      "category_id": 1,
      "featured_link": null,
      "posters": [
        {
          "extras": null,
          "description": "Original Poster",
          "user": {
            "id": 503,
            "username": "derrekbertrand",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png"
          }
        },
        {
          "extras": null,
          "description": "Frequent Poster",
          "user": {
            "id": 415,
            "username": "michaelhibay",
            "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
          }
        },
        {
          "extras": "latest",
          "description": "Most Recent Poster",
          "user": {
            "id": 61,
            "username": "beauby",
            "avatar_template": "https://avatars.discourse.org/v2/letter/b/f475e1/{size}.png"
          }
        }
      ]
    }
  ],
  "id": 1020,
  "title": "POST /comments with relationship or POST /articles/33/comments",
  "fancy_title": "POST /comments with relationship or POST /articles/33/comments",
  "posts_count": 19,
  "created_at": "2017-07-06T01:56:25.691Z",
  "views": 2026,
  "reply_count": 10,
  "like_count": 2,
  "last_posted_at": "2017-07-28T17:32:34.478Z",
  "visible": true,
  "closed": false,
  "archived": false,
  "has_summary": false,
  "archetype": "regular",
  "slug": "post-comments-with-relationship-or-post-articles-33-comments",
  "category_id": 1,
  "word_count": 2562,
  "deleted_at": null,
  "user_id": 502,
  "featured_link": null,
  "pinned_globally": false,
  "pinned_at": null,
  "pinned_until": null,
  "draft": null,
  "draft_key": "topic_1020",
  "draft_sequence": null,
  "unpinned": null,
  "pinned": false,
  "details": {
    "created_by": {
      "id": 502,
      "username": "mikeni",
      "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png"
    },
    "last_poster": {
      "id": 415,
      "username": "michaelhibay",
      "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png"
    },
    "participants": [
      {
        "id": 415,
        "username": "michaelhibay",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/michaelhibay/{size}/405_1.png",
        "post_count": 7,
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_color": null,
        "primary_group_flair_bg_color": null
      },
      {
        "id": 503,
        "username": "derrekbertrand",
        "avatar_template": "/user_avatar/discuss.jsonapi.org/derrekbertrand/{size}/426_1.png",
        "post_count": 6,
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_color": null,
        "primary_group_flair_bg_color": null
      },
      {
        "id": 502,
        "username": "mikeni",
        "avatar_template": "https://avatars.discourse.org/v2/letter/m/e36b37/{size}.png",
        "post_count": 5,
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_color": null,
        "primary_group_flair_bg_color": null
      },
      {
        "id": 499,
        "username": "cam",
        "avatar_template": "https://avatars.discourse.org/v2/letter/c/bbe5ce/{size}.png",
        "post_count": 1,
        "primary_group_name": null,
        "primary_group_flair_url": null,
        "primary_group_flair_color": null,
        "primary_group_flair_bg_color": null
      }
    ],
    "links": [
      {
        "url": "http://discuss.jsonapi.org/t/posting-related-data/1054/3",
        "title": "POSTing related data",
        "internal": true,
        "attachment": false,
        "reflection": false,
        "clicks": 30,
        "user_id": 415,
        "domain": "discuss.jsonapi.org",
        "root_domain": "jsonapi.org"
      },
      {
        "url": "http://jsonapi.org/format/#crud-updating-to-many-relationships",
        "title": "JSON API — Latest Specification (v1.0)",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 25,
        "user_id": 415,
        "domain": "jsonapi.org",
        "root_domain": "jsonapi.org"
      },
      {
        "url": "http://jsonapi.org/format/#document-compound-documents",
        "title": null,
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 25,
        "user_id": 503,
        "domain": "jsonapi.org",
        "root_domain": "jsonapi.org"
      },
      {
        "url": "https://github.com/json-api/json-api/issues/1158#issuecomment-313527090",
        "title": "Creating new relationship · Issue #1158 · json-api/json-api · GitHub",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 21,
        "user_id": 415,
        "domain": "github.com",
        "root_domain": "github.com"
      },
      {
        "url": "https://market.mashape.com/community/angellist",
        "title": "AngelList API Documentation",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 17,
        "user_id": 502,
        "domain": "market.mashape.com",
        "root_domain": "mashape.com"
      },
      {
        "url": "https://github.com/katharsis-project/katharsis-framework",
        "title": "GitHub - katharsis-project/katharsis-framework: Katharsis adds powerful layer for RESTful endpoints providing implementenation of JSON:API standard",
        "internal": false,
        "attachment": false,
        "reflection": false,
        "clicks": 8,
        "user_id": 415,
        "domain": "github.com",
        "root_domain": "github.com"
      }
    ],
    "notification_level": 1,
    "can_flag_topic": false
  },
  "current_post_number": 1,
  "highest_post_number": 19,
  "deleted_by": null,
  "actions_summary": [
    {
      "id": 4,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 8,
      "count": 0,
      "hidden": false,
      "can_act": false
    },
    {
      "id": 7,
      "count": 0,
      "hidden": false,
      "can_act": false
    }
  ],
  "chunk_size": 20,
  "bookmarked": null,
  "topic_timer": null,
  "message_bus_last_id": 6,
  "participant_count": 4,
  "can_vote": false,
  "vote_count": null,
  "user_voted": false
}
